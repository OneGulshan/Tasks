@model Tasks.Models.Supplier

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Supplier</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post" asp-action="Create" enctype="multipart/form-data">
            <div>
                @Html.HiddenFor(model => model.Id)
                @Html.LabelFor(m => m.PhotoPath, new { @class = "form-label" })
                @Html.EditorFor(m => m.PhotoFile, new { htmlAttributes = new { @class = "form-control", @required = true, @autocomplete = "off" } })
                @Html.ValidationMessageFor(m => m.PhotoFile, "", new { @class = "text-danger" })
            </div>
            <div>
                @Html.LabelFor(m => m.FName, new { @class = "form-label" })
                @Html.TextBoxFor(m => m.FName, new { @class = "form-control", @onkeypress = "allowAlphaSpace(event)", @autocomplete = "off" })
            </div>
            <div>
                @Html.LabelFor(m => m.MName, new { @class = "form-label" })
                @Html.TextBoxFor(m => m.MName, new { @class = "form-control", @onkeypress = "allowAlphaSpace(event)", @autocomplete = "off" })
            </div>
            <div>
                @Html.LabelFor(m => m.LName, new { @class = "form-label" })
                @Html.TextBoxFor(m => m.LName, new { @class = "form-control", @onkeypress = "allowAlphaSpace(event)", @autocomplete = "off" })
            </div>
            <div>
                @Html.LabelFor(m => m.DOB, new { @class = "form-label" })
                @Html.EditorFor(m => m.DOB, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @onchange = "AgeCalculation()" } })
            </div>
            <div>
                @Html.LabelFor(m => m.Age, new { @class = "form-label" })
                @Html.TextBoxFor(m => m.Age, new { @class = "form-control", @readonly = true })
            </div>
            <div>
                Male : @Html.RadioButton("Gender", "Male", true)&nbsp;&nbsp;
                FeMale : @Html.RadioButton("Gender", "FeMale")
            </div>
            <div>
                @Html.LabelFor(m => m.ContactNo, new { @class = "form-label" })
                @Html.TextBoxFor(m => m.ContactNo, new { @class = "form-control", @onkeypress = "return this.value.length<10", @autocomplete = "off" })
            </div>
            <div>
                @Html.LabelFor(m => m.Email, new { @class = "form-label" })
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @autocomplete = "off", @required = true })
                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
            </div>
            <table id="ExpTable" class="table table-striped table-sm">
                <thead>
                    <tr>
                        <th>
                            Degree
                        </th>
                        <th>
                            PassingYear
                        </th>
                        <th>
                            Percentage
                        </th>
                    </tr>
                </thead>
                <tbody>
                    <input type="hidden" id="hdnLastIndex" value="0" />
                    @for (int i = 0; i < Model.Experiences.Count; i++)
                    {
                        <tr>
                            <td>
                                @Html.EditorFor(x => x.Experiences[i].Degree, new { htmlAttributes = new { @class = "form-control" } })
                            </td>
                            <td>
                                @Html.EditorFor(x => x.Experiences[i].PassingYear, new { htmlAttributes = new { @class = "form-control" } })
                            </td>
                            <td>
                                @Html.EditorFor(x => x.Experiences[i].Percentage, new { htmlAttributes = new { @class = "form-control" } })
                            </td>
                            <td>
                                <button id="btndummy-@i" type="button" class="btn btn-sm invisible">Dummy</button>
                                <button id="btnadd-@i" type="button" class="btn btn-sm btn-secondary visible" onclick="AddItem(this)" style="position:absolute">Add</button>
                                <button id="btnremove-@i" type="button" class="btn btn-sm btn-danger invisible" onclick="DeleteItem(this)" style="position:absolute">Delete</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <div>
                <input type="submit" value="@ViewBag.btn" class="btn btn-primary" onclick="return JSval()" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
        if (TempData["Message"] != null)
        {
            <script>
                alert('@Html.Raw(TempData["Message"])')
            </script>
        }

    }
}